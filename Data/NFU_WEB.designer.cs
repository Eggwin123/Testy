#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UmbracoWebsites.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NFU_WEB")]
	public partial class NFU_WEBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertConference(Conference instance);
    partial void UpdateConference(Conference instance);
    partial void DeleteConference(Conference instance);
    partial void InsertCONFERENCE_Question(CONFERENCE_Question instance);
    partial void UpdateCONFERENCE_Question(CONFERENCE_Question instance);
    partial void DeleteCONFERENCE_Question(CONFERENCE_Question instance);
    partial void InsertCONFERENCE_Session(CONFERENCE_Session instance);
    partial void UpdateCONFERENCE_Session(CONFERENCE_Session instance);
    partial void DeleteCONFERENCE_Session(CONFERENCE_Session instance);
    partial void InsertCONFERENCE_Question_Like(CONFERENCE_Question_Like instance);
    partial void UpdateCONFERENCE_Question_Like(CONFERENCE_Question_Like instance);
    partial void DeleteCONFERENCE_Question_Like(CONFERENCE_Question_Like instance);
    #endregion
		
		public NFU_WEBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NFU_WEBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NFU_WEBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NFU_WEBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Conference> Conferences
		{
			get
			{
				return this.GetTable<Conference>();
			}
		}
		
		public System.Data.Linq.Table<CONFERENCE_Question> CONFERENCE_Questions
		{
			get
			{
				return this.GetTable<CONFERENCE_Question>();
			}
		}
		
		public System.Data.Linq.Table<CONFERENCE_Session> CONFERENCE_Sessions
		{
			get
			{
				return this.GetTable<CONFERENCE_Session>();
			}
		}
		
		public System.Data.Linq.Table<CONFERENCE_Question_Like> CONFERENCE_Question_Likes
		{
			get
			{
				return this.GetTable<CONFERENCE_Question_Like>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conference")]
	public partial class Conference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private bool _Deleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Conference()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONFERENCE_Question")]
	public partial class CONFERENCE_Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ConferenceSessionId;
		
		private string _MembershipNumber;
		
		private string _DisplayName;
		
		private string _Question;
		
		private string _AbridgedQuestion;
		
		private bool _ShowOnSite;
		
		private bool _PassedToChair;
		
		private bool _Answered;
		
		private bool _Rejected;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _CrmName;
		
		private bool _IsFromFloor;
		
		private bool _NoteForChair;
		
		private bool _Deleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnConferenceSessionIdChanging(int value);
    partial void OnConferenceSessionIdChanged();
    partial void OnMembershipNumberChanging(string value);
    partial void OnMembershipNumberChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnAbridgedQuestionChanging(string value);
    partial void OnAbridgedQuestionChanged();
    partial void OnShowOnSiteChanging(bool value);
    partial void OnShowOnSiteChanged();
    partial void OnPassedToChairChanging(bool value);
    partial void OnPassedToChairChanged();
    partial void OnAnsweredChanging(bool value);
    partial void OnAnsweredChanged();
    partial void OnRejectedChanging(bool value);
    partial void OnRejectedChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnCrmNameChanging(string value);
    partial void OnCrmNameChanged();
    partial void OnIsFromFloorChanging(bool value);
    partial void OnIsFromFloorChanged();
    partial void OnNoteForChairChanging(bool value);
    partial void OnNoteForChairChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public CONFERENCE_Question()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConferenceSessionId", DbType="Int NOT NULL")]
		public int ConferenceSessionId
		{
			get
			{
				return this._ConferenceSessionId;
			}
			set
			{
				if ((this._ConferenceSessionId != value))
				{
					this.OnConferenceSessionIdChanging(value);
					this.SendPropertyChanging();
					this._ConferenceSessionId = value;
					this.SendPropertyChanged("ConferenceSessionId");
					this.OnConferenceSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipNumber", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string MembershipNumber
		{
			get
			{
				return this._MembershipNumber;
			}
			set
			{
				if ((this._MembershipNumber != value))
				{
					this.OnMembershipNumberChanging(value);
					this.SendPropertyChanging();
					this._MembershipNumber = value;
					this.SendPropertyChanged("MembershipNumber");
					this.OnMembershipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbridgedQuestion", DbType="NVarChar(4000)")]
		public string AbridgedQuestion
		{
			get
			{
				return this._AbridgedQuestion;
			}
			set
			{
				if ((this._AbridgedQuestion != value))
				{
					this.OnAbridgedQuestionChanging(value);
					this.SendPropertyChanging();
					this._AbridgedQuestion = value;
					this.SendPropertyChanged("AbridgedQuestion");
					this.OnAbridgedQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnSite", DbType="Bit NOT NULL")]
		public bool ShowOnSite
		{
			get
			{
				return this._ShowOnSite;
			}
			set
			{
				if ((this._ShowOnSite != value))
				{
					this.OnShowOnSiteChanging(value);
					this.SendPropertyChanging();
					this._ShowOnSite = value;
					this.SendPropertyChanged("ShowOnSite");
					this.OnShowOnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassedToChair", DbType="Bit NOT NULL")]
		public bool PassedToChair
		{
			get
			{
				return this._PassedToChair;
			}
			set
			{
				if ((this._PassedToChair != value))
				{
					this.OnPassedToChairChanging(value);
					this.SendPropertyChanging();
					this._PassedToChair = value;
					this.SendPropertyChanged("PassedToChair");
					this.OnPassedToChairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answered", DbType="Bit NOT NULL")]
		public bool Answered
		{
			get
			{
				return this._Answered;
			}
			set
			{
				if ((this._Answered != value))
				{
					this.OnAnsweredChanging(value);
					this.SendPropertyChanging();
					this._Answered = value;
					this.SendPropertyChanged("Answered");
					this.OnAnsweredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rejected", DbType="Bit NOT NULL")]
		public bool Rejected
		{
			get
			{
				return this._Rejected;
			}
			set
			{
				if ((this._Rejected != value))
				{
					this.OnRejectedChanging(value);
					this.SendPropertyChanging();
					this._Rejected = value;
					this.SendPropertyChanged("Rejected");
					this.OnRejectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrmName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CrmName
		{
			get
			{
				return this._CrmName;
			}
			set
			{
				if ((this._CrmName != value))
				{
					this.OnCrmNameChanging(value);
					this.SendPropertyChanging();
					this._CrmName = value;
					this.SendPropertyChanged("CrmName");
					this.OnCrmNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFromFloor", DbType="Bit NOT NULL")]
		public bool IsFromFloor
		{
			get
			{
				return this._IsFromFloor;
			}
			set
			{
				if ((this._IsFromFloor != value))
				{
					this.OnIsFromFloorChanging(value);
					this.SendPropertyChanging();
					this._IsFromFloor = value;
					this.SendPropertyChanged("IsFromFloor");
					this.OnIsFromFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteForChair", DbType="Bit NOT NULL")]
		public bool NoteForChair
		{
			get
			{
				return this._NoteForChair;
			}
			set
			{
				if ((this._NoteForChair != value))
				{
					this.OnNoteForChairChanging(value);
					this.SendPropertyChanging();
					this._NoteForChair = value;
					this.SendPropertyChanged("NoteForChair");
					this.OnNoteForChairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONFERENCE_Session")]
	public partial class CONFERENCE_Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ConferenceId;
		
		private string _Name;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private bool _Deleted;
		
		private bool _Live;
		
		private bool _HasQuestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnConferenceIdChanging(int value);
    partial void OnConferenceIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnLiveChanging(bool value);
    partial void OnLiveChanged();
    partial void OnHasQuestionsChanging(bool value);
    partial void OnHasQuestionsChanged();
    #endregion
		
		public CONFERENCE_Session()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConferenceId", DbType="Int NOT NULL")]
		public int ConferenceId
		{
			get
			{
				return this._ConferenceId;
			}
			set
			{
				if ((this._ConferenceId != value))
				{
					this.OnConferenceIdChanging(value);
					this.SendPropertyChanging();
					this._ConferenceId = value;
					this.SendPropertyChanged("ConferenceId");
					this.OnConferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Live", DbType="Bit NOT NULL")]
		public bool Live
		{
			get
			{
				return this._Live;
			}
			set
			{
				if ((this._Live != value))
				{
					this.OnLiveChanging(value);
					this.SendPropertyChanging();
					this._Live = value;
					this.SendPropertyChanged("Live");
					this.OnLiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQuestions", DbType="Bit NOT NULL")]
		public bool HasQuestions
		{
			get
			{
				return this._HasQuestions;
			}
			set
			{
				if ((this._HasQuestions != value))
				{
					this.OnHasQuestionsChanging(value);
					this.SendPropertyChanging();
					this._HasQuestions = value;
					this.SendPropertyChanged("HasQuestions");
					this.OnHasQuestionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONFERENCE_Question_Like")]
	public partial class CONFERENCE_Question_Like : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MembershipNumber;
		
		private int _ConferenceQuestionId;
		
		private System.DateTime _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMembershipNumberChanging(string value);
    partial void OnMembershipNumberChanged();
    partial void OnConferenceQuestionIdChanging(int value);
    partial void OnConferenceQuestionIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public CONFERENCE_Question_Like()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipNumber", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string MembershipNumber
		{
			get
			{
				return this._MembershipNumber;
			}
			set
			{
				if ((this._MembershipNumber != value))
				{
					this.OnMembershipNumberChanging(value);
					this.SendPropertyChanging();
					this._MembershipNumber = value;
					this.SendPropertyChanged("MembershipNumber");
					this.OnMembershipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConferenceQuestionId", DbType="Int NOT NULL")]
		public int ConferenceQuestionId
		{
			get
			{
				return this._ConferenceQuestionId;
			}
			set
			{
				if ((this._ConferenceQuestionId != value))
				{
					this.OnConferenceQuestionIdChanging(value);
					this.SendPropertyChanging();
					this._ConferenceQuestionId = value;
					this.SendPropertyChanged("ConferenceQuestionId");
					this.OnConferenceQuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
